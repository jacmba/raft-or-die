[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://cwqt6a5x8s3dq"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1g1u4"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bvrgb"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0.1, 0.1, 0.1, 0)]
op_type = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// VectorOp:3
	vec4 n_in3p1 = vec4(0.10000, 0.10000, 0.10000, 0.00000);
	vec4 n_out3p0 = n_out2p0 + n_in3p1;


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_1g1u4")
nodes/fragment/2/position = Vector2(-120, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_bvrgb")
nodes/fragment/3/position = Vector2(200, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
